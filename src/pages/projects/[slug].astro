---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { formatProjectDate, getStatusBadgeClass, getProjectDuration } from '../../utils/projects';

// Generate static paths for all projects
export async function getStaticPaths() {
  const projectEntries = await getCollection('projects');
  
  return projectEntries.map(entry => ({
    params: { slug: entry.slug }, 
    props: { entry },
  }));
}

// Get project data from the props
const { entry } = Astro.props;
const { Content } = await entry.render();

// Format dates
const startDate = formatProjectDate(entry.data.startDate);
const endDate = entry.data.endDate ? formatProjectDate(entry.data.endDate) : 'Present';
const duration = getProjectDuration(entry.data.startDate, entry.data.endDate);
---

<Layout title={`${entry.data.title} | Projects | Antiraedus`} description={entry.data.description}>
  <main class="project-detail">
    <article>
      <div class="container">
        <div class="project-header">
          <h1>{entry.data.title}</h1>
          
          <div class="project-meta">
            <div class={`status-badge ${getStatusBadgeClass(entry.data.status)}`}>
              {entry.data.status}
            </div>
            <div class="project-timeline">
              <span class="timeline-dates">{startDate} - {endDate}</span>
              <span class="timeline-duration">({duration})</span>
            </div>
          </div>
          
          <div class="project-actions">
            {entry.data.liveUrl && (
              <a href={entry.data.liveUrl} target="_blank" rel="noopener noreferrer" class="btn btn-primary">
                View Live Project
              </a>
            )}
            {entry.data.githubUrl && (
              <a href={entry.data.githubUrl} target="_blank" rel="noopener noreferrer" class="btn btn-outline">
                Source Code
              </a>
            )}
          </div>
        </div>
        
        <div class="project-hero">
          <img src={entry.data.image} alt={entry.data.imageAlt} class="hero-image" />
        </div>
        
        <div class="project-tags-container">
          <div class="tag-group">
            <h3 class="tag-title">Technologies</h3>
            <div class="project-tags">
              {entry.data.technologies.map((tech: string) => (
                <span class="tag">{tech}</span>
              ))}
            </div>
          </div>
          
          <div class="tag-group">
            <h3 class="tag-title">Category</h3>
            <span class="category">{entry.data.category}</span>
          </div>
        </div>
        
        <div class="project-content">
          <Content />
        </div>
        
        <div class="project-navigation">
          <a href="/projects" class="btn btn-secondary">
            <span class="nav-icon">‚Üê</span> Back to All Projects
          </a>
        </div>
      </div>
    </article>
  </main>
</Layout>

<style>
  .project-detail {
    padding: 2rem 0 4rem;
  }
  
  .project-header {
    margin-bottom: 2rem;
  }
  
  h1 {
    margin-bottom: 1rem;
    font-size: 2.5rem;
  }
  
  .project-meta {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 1.5rem;
    margin-bottom: 1.5rem;
  }
  
  .status-badge {
    padding: 0.4rem 1rem;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 600;
    text-transform: uppercase;
  }
  
  .status-completed {
    background-color: #10b981;
    color: white;
  }
  
  .status-in-progress {
    background-color: #f59e0b;
    color: white;
  }
  
  .status-planned {
    background-color: #6366f1;
    color: white;
  }
  
  .project-timeline {
    font-size: 1rem;
    color: var(--color-text-alt);
  }
  
  .timeline-duration {
    margin-left: 0.5rem;
    font-style: italic;
  }
  
  .project-actions {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;
  }
  
  .project-hero {
    margin-bottom: 2.5rem;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  }
  
  .hero-image {
    width: 100%;
    height: auto;
    max-height: 500px;
    object-fit: cover;
  }
  
  .project-tags-container {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    margin-bottom: 2.5rem;
    padding: 1.5rem;
    background-color: var(--color-bg-alt);
    border-radius: 8px;
  }
  
  .tag-group {
    flex: 1;
    min-width: 200px;
  }
  
  .tag-title {
    margin-top: 0;
    margin-bottom: 1rem;
    font-size: 1.1rem;
  }
  
  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .tag {
    background-color: var(--color-bg);
    color: var(--color-primary);
    padding: 0.35rem 0.85rem;
    border-radius: 20px;
    font-size: 0.9rem;
  }
  
  .category {
    display: inline-block;
    padding: 0.35rem 0.85rem;
    background-color: var(--color-bg);
    border-radius: 20px;
    font-size: 0.9rem;
    color: var(--color-secondary);
  }
  
  .project-content {
    line-height: 1.7;
    font-size: 1.1rem;
  }

  .project-content h1,
  .project-content h2,
  .project-content h3 {
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  .project-content h2 {
    font-size: 1.8rem;
  }

  .project-content h3 {
    font-size: 1.4rem;
  }

  .project-content p {
    margin-bottom: 1.25rem;
  }

  .project-content ul,
  .project-content ol {
    margin-bottom: 1.25rem;
    padding-left: 1.5rem;
  }

  .project-content li {
    margin-bottom: 0.5rem;
  }

  .project-content img {
    max-width: 100%;
    border-radius: 6px;
    margin: 2rem 0;
  }

  .project-navigation {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--color-border);
  }

  .nav-icon {
    margin-right: 0.5rem;
  }

  .btn {
    display: inline-block;
    padding: 0.65rem 1.25rem;
    border-radius: 4px;
    font-size: 1rem;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .btn-primary {
    background-color: var(--color-primary);
    color: white;
  }

  .btn-primary:hover {
    opacity: 0.9;
  }

  .btn-outline {
    border: 1px solid var(--color-primary);
    color: var(--color-primary);
  }

  .btn-outline:hover {
    background-color: var(--color-primary);
    color: white;
  }

  .btn-secondary {
    background-color: var(--color-secondary);
    color: white;
  }

  .btn-secondary:hover {
    opacity: 0.9;
  }

  @media (max-width: 768px) {
    h1 {
      font-size: 2rem;
    }

    .project-actions {
      flex-direction: column;
    }
    
    .btn {
      width: 100%;
      text-align: center;
    }
  }
</style>
