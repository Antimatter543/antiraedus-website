---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

// Generate static paths for all creative content
export async function getStaticPaths() {
  const creativeEntries = await getCollection('creatives', ({ data }) => {
    // Filter out draft posts in production
    return process.env.NODE_ENV === 'production' ? !data.draft : true;
  });
  
  return creativeEntries.map(entry => ({
    params: { slug: entry.slug }, 
    props: { entry },
  }));
}

// Get creative content data from the props
const { entry } = Astro.props;
const { Content } = await entry.render();

// Format the publication date
const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(entry.data.pubDate);

// Category styling
const categoryColors = {
  poem: 'linear-gradient(135deg, #ff6b6b, #ee5a52)',
  story: 'linear-gradient(135deg, #4ecdc4, #44a08d)',
  quote: 'linear-gradient(135deg, #45b7d1, #2196f3)',
  thought: 'linear-gradient(135deg, #96ceb4, #54a0ff)'
};
---

<Layout title={`${entry.data.title} | Creatives | Antiraedus`} description={entry.data.description}>
  <main class="creative-post">
    <article>
      <div class="container">
        <div class="creative-header">
          <div class="back-link">
            <a href="/creatives">← Back to Creatives</a>
          </div>
          
          <div class="creative-meta">
            <span class="creative-category" style={`background: ${categoryColors[entry.data.category]}`}>
              {entry.data.category}
            </span>
            <span class="publish-date">
              <time datetime={entry.data.pubDate.toISOString()}>
                {formattedDate}
              </time>
            </span>
          </div>
          
          <h1>{entry.data.title}</h1>
          <p class="creative-description">{entry.data.description}</p>
        </div>
        
        <div class="creative-content">
          <Content />
        </div>
        
        {entry.data.tags && entry.data.tags.length > 0 && (
          <div class="creative-tags">
            <h3>Tags:</h3>
            <div class="tag-list">
              {entry.data.tags.map((tag: string) => (
                <span class="tag">#{tag}</span>
              ))}
            </div>
          </div>
        )}
        
        <div class="creative-footer">
          <div class="navigation-links">
            <a href="/creatives" class="nav-link">← All Creatives</a>
            <a href="/#contact" class="nav-link">Get in Touch →</a>
          </div>
        </div>
      </div>
    </article>
  </main>
</Layout>

<style>
  .creative-post {
    padding: 2rem 0;
    margin-top: 6rem;
    min-height: calc(100vh - 6rem);
  }
  
  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 2rem;
  }
  
  .back-link {
    margin-bottom: 2rem;
  }
  
  .back-link a {
    color: #64ffda;
    text-decoration: none;
    font-size: 0.9rem;
    transition: color 0.3s ease;
  }
  
  .back-link a:hover {
    color: #4ecdc4;
  }
  
  .creative-header {
    margin-bottom: 3rem;
    text-align: center;
  }
  
  .creative-meta {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
    flex-wrap: wrap;
  }
  
  .creative-category {
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .publish-date {
    color: #666;
    font-size: 0.9rem;
  }
  
  .creative-header h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #333;
    line-height: 1.2;
  }
  
  .creative-description {
    font-size: 1.2rem;
    color: #666;
    line-height: 1.6;
    max-width: 600px;
    margin: 0 auto;
  }
  
  .creative-content {
    line-height: 1.8;
    font-size: 1.1rem;
    color: #333;
    margin-bottom: 3rem;
  }
  
  .creative-content h2 {
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    color: #333;
  }
  
  .creative-content p {
    margin-bottom: 1.5rem;
  }
  
  .creative-content blockquote {
    border-left: 4px solid #64ffda;
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: #555;
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 0 8px 8px 0;
  }
  
  .creative-content pre {
    border-radius: 8px;
    margin: 2rem 0;
    overflow-x: auto;
  }
  
  .creative-content code {
    background: #f4f4f4;
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    font-size: 0.9em;
  }
  
  .creative-content pre code {
    background: none;
    padding: 0;
  }
  
  .creative-tags {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #eaeaea;
    text-align: center;
  }
  
  .creative-tags h3 {
    margin-bottom: 1rem;
    color: #333;
  }
  
  .tag-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
  }
  
  .tag {
    display: inline-block;
    padding: 0.4rem 0.8rem;
    background: linear-gradient(135deg, #64ffda, #4ecdc4);
    color: white;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
  }
  
  .creative-footer {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid #eaeaea;
  }
  
  .navigation-links {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .nav-link {
    color: #64ffda;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;
  }
  
  .nav-link:hover {
    color: #4ecdc4;
  }
  
  @media (max-width: 768px) {
    .creative-header h1 {
      font-size: 2rem;
    }
    
    .creative-meta {
      flex-direction: column;
      gap: 0.5rem;
    }
    
    .navigation-links {
      flex-direction: column;
      gap: 1rem;
      text-align: center;
    }
    
    .container {
      padding: 0 1rem;
    }
  }
</style>